/**
 * –¢–µ—Å—Ç–æ–≤—ã–π —Ñ–∞–π–ª –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã RaindropAPI
 * –≠—Ç–æ—Ç —Ñ–∞–π–ª –º–æ–∂–Ω–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –æ—Ç–¥–µ–ª—å–Ω–æ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è API
 */

import { RaindropAPI } from './services/raindrop-api';

async function testRaindropAPI() {
  // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à —Ä–µ–∞–ª—å–Ω—ã–π API –∫–ª—é—á
  const apiKey = 'your-api-key-here';

  if (apiKey === 'your-api-key-here') {
    console.log(
      '‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ –≤–∞—à API –∫–ª—é—á Raindrop.io –≤ —Ñ–∞–π–ª–µ test-raindrop.ts',
    );
    return;
  }

  const api = new RaindropAPI(apiKey);

  try {
    console.log('üöÄ –ù–∞—á–∏–Ω–∞–µ–º —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Raindrop.io API...\n');

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –∫–æ—Ä–Ω–µ–≤—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π
    console.log('1. –ü–æ–ª—É—á–∞–µ–º –∫–æ—Ä–Ω–µ–≤—ã–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏...');
    const rootCollections = await api.getRootCollections();
    console.log(`   –ù–∞–π–¥–µ–Ω–æ ${rootCollections.length} –∫–æ—Ä–Ω–µ–≤—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π`);
    rootCollections.forEach((col) => {
      console.log(
        `   - ${col.title} (ID: ${col._id}, –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: ${col.count || 0})`,
      );
    });

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π
    console.log('\n2. –ü–æ–ª—É—á–∞–µ–º –¥–æ—á–µ—Ä–Ω–∏–µ –∫–æ–ª–ª–µ–∫—Ü–∏–∏...');
    const childCollections = await api.getChildCollections();
    console.log(`   –ù–∞–π–¥–µ–Ω–æ ${childCollections.length} –¥–æ—á–µ—Ä–Ω–∏—Ö –∫–æ–ª–ª–µ–∫—Ü–∏–π`);
    childCollections.forEach((col) => {
      console.log(
        `   - ${col.title} (ID: ${col._id}, —Ä–æ–¥–∏—Ç–µ–ª—å: ${col.parent?.$id || '–Ω–µ—Ç'})`,
      );
    });

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–ª—É—á–µ–Ω–∏–µ raindrops –¥–ª—è –ø–µ—Ä–≤–æ–π –∫–æ–ª–ª–µ–∫—Ü–∏–∏
    if (rootCollections.length > 0) {
      const firstCollection = rootCollections[0];
      console.log(
        `\n3. –ü–æ–ª—É—á–∞–µ–º raindrops –¥–ª—è –∫–æ–ª–ª–µ–∫—Ü–∏–∏ "${firstCollection.title}"...`,
      );
      const raindrops = await api.getRaindrops(firstCollection._id, 5);
      console.log(`   –ù–∞–π–¥–µ–Ω–æ ${raindrops.length} raindrops`);
      raindrops.forEach((raindrop) => {
        console.log(`   - ${raindrop.title}: ${raindrop.link}`);
      });
    }

    // –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –ø–æ–ª–Ω–æ–π –¥—Ä–µ–≤–æ–≤–∏–¥–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä—ã
    console.log('\n4. –°—Ç—Ä–æ–∏–º –ø–æ–ª–Ω—É—é –¥—Ä–µ–≤–æ–≤–∏–¥–Ω—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É...');
    const tree = await api.buildCollectionTree();

    console.log('\nüìã –ü–æ–ª–Ω–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞:');
    api.printCollectionTree(tree);

    console.log('\n‚úÖ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ!');
  } catch (error) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏:', error);
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Ñ–∞–π–ª –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é
if (typeof window === 'undefined') {
  testRaindropAPI();
}
